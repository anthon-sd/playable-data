---
/**
 * BaseCalculator component for Astro
 * A reusable calculator component with consistent styling
 */

interface Props {
  title: string;
  description?: string;
  iconName?: string;
}

const { title, description, iconName = 'calculator' } = Astro.props;

// Simple icon mapping - expand as needed
const iconMap = {
  calculator: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="2" width="16" height="20" rx="2"/><line x1="8" x2="16" y1="6" y2="6"/><line x1="16" x2="16" y1="14" y2="18"/><path d="M16 10h.01"/><path d="M12 10h.01"/><path d="M8 10h.01"/><path d="M12 14h.01"/><path d="M8 14h.01"/><path d="M12 18h.01"/><path d="M8 18h.01"/></svg>`,
  chart: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 3v18h18"/><path d="M18 17V9"/><path d="M13 17V5"/><path d="M8 17v-3"/></svg>`,
  trending: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="23 6 13.5 15.5 8.5 10.5 1 18"/><polyline points="17 6 23 6 23 12"/></svg>`
};

const iconSvg = iconMap[iconName] || iconMap.calculator;
---

<div class="card">
  <div class="flex items-center gap-2 mb-6">
    <div class="text-primary" set:html={iconSvg}></div>
    <div>
      <h2 class="text-xl font-bold">{title}</h2>
      {description && (
        <p class="text-gray-600 text-sm mt-1">{description}</p>
      )}
    </div>
  </div>

  <div class="space-y-4">
    <slot />
  </div>
</div>