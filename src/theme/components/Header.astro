---
/**
 * Header component for Astro
 * A reusable header component with navigation
 */

interface NavLink {
  label: string;
  href: string;
  external?: boolean;
}

interface Props {
  title: string;
  logo?: string;
  navLinks?: NavLink[];
}

const { title, logo, navLinks = [] } = Astro.props;
---

<header class="header">
  <div class="container-custom">
    <div class="flex items-center justify-between py-6">
      <div class="flex items-center gap-4">
        {logo ? (
          <img src={logo} alt={title} class="h-16 w-auto" />
        ) : (
          <span class="text-2xl font-bold text-white">{title}</span>
        )}
      </div>

      <nav class="hidden md:flex items-center gap-4">
        {navLinks.map((link) => (
          <a
            href={link.href}
            target={link.external ? "_blank" : undefined}
            rel={link.external ? "noopener noreferrer" : undefined}
            class="relative px-4 py-2 text-white hover:text-blue-100 transition-all duration-300 group"
          >
            <span class="relative z-10 flex items-center gap-1">
              {link.label}
              {link.external && (
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>
                  <polyline points="15 3 21 3 21 9"></polyline>
                  <line x1="10" y1="14" x2="21" y2="3"></line>
                </svg>
              )}
            </span>
            <span class="absolute inset-0 bg-white/10 rounded-lg scale-0 group-hover:scale-100 transition-transform duration-300 ease-out origin-center"></span>
          </a>
        ))}
      </nav>
      
      <button class="md:hidden mobile-menu-button" aria-label="Toggle menu">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="4" x2="20" y1="12" y2="12"></line>
          <line x1="4" x2="20" y1="6" y2="6"></line>
          <line x1="4" x2="20" y1="18" y2="18"></line>
        </svg>
      </button>
    </div>
  </div>
  
  <!-- Mobile menu -->
  <div class="mobile-menu hidden">
    <div class="container-custom py-4">
      {navLinks.map((link) => (
        <a
          href={link.href}
          target={link.external ? "_blank" : undefined}
          rel={link.external ? "noopener noreferrer" : undefined}
          class="block py-2 text-white hover:text-blue-100"
        >
          <span class="flex items-center gap-1">
            {link.label}
            {link.external && (
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>
                <polyline points="15 3 21 3 21 9"></polyline>
                <line x1="10" y1="14" x2="21" y2="3"></line>
              </svg>
            )}
          </span>
        </a>
      ))}
    </div>
  </div>
</header>

<script>
  // Mobile menu toggle
  document.addEventListener('DOMContentLoaded', () => {
    const menuButton = document.querySelector('.mobile-menu-button');
    const mobileMenu = document.querySelector('.mobile-menu');
    
    if (menuButton && mobileMenu) {
      menuButton.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
      });
    }
  });
</script>