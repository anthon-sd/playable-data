---
import AdminLayout from '../../../layouts/AdminLayout.astro';

// Handle form submission
let successMessage = '';
let errorMessage = '';

if (Astro.request.method === 'POST') {
  try {
    // In a real implementation, this would upload to Supabase storage
    successMessage = 'File uploaded successfully! (Development mode)';
  } catch (error) {
    console.error('Upload error:', error);
    errorMessage = 'An unexpected error occurred';
  }
}
---

<AdminLayout title="Upload Media">
  <div class="mb-6">
    <a href="/admin/media/" class="text-blue-500 hover:text-blue-600 flex items-center">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
      </svg>
      Back to Media Library
    </a>
  </div>
  
  {errorMessage && (
    <div class="alert alert-danger mb-6">
      {errorMessage}
    </div>
  )}
  
  {successMessage && (
    <div class="alert alert-success mb-6">
      {successMessage}
    </div>
  )}
  
  <div class="card">
    <div class="card-header">
      <h2 class="text-lg font-semibold">Upload Media</h2>
    </div>
    
    <form method="POST" enctype="multipart/form-data" class="card-body">
      <div class="space-y-6">
        <div>
          <label for="file" class="block text-sm font-medium text-gray-700 mb-1">File *</label>
          <div class="mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md">
            <div class="space-y-1 text-center">
              <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48" aria-hidden="true">
                <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
              </svg>
              <div class="flex text-sm text-gray-600">
                <label for="file-upload" class="relative cursor-pointer bg-white rounded-md font-medium text-blue-600 hover:text-blue-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-blue-500">
                  <span>Upload a file</span>
                  <input id="file-upload" name="file" type="file" class="sr-only" />
                </label>
                <p class="pl-1">or drag and drop</p>
              </div>
              <p class="text-xs text-gray-500">
                PNG, JPG, GIF, PDF up to 10MB
              </p>
            </div>
          </div>
        </div>
        
        <div>
          <label for="alt-text" class="block text-sm font-medium text-gray-700 mb-1">Alt Text (for images)</label>
          <input type="text" id="alt-text" name="alt-text" class="form-input" />
          <p class="text-sm text-gray-500 mt-1">Describe the image for accessibility</p>
        </div>
        
        <div>
          <label for="folder" class="block text-sm font-medium text-gray-700 mb-1">Folder</label>
          <select id="folder" name="folder" class="form-select">
            <option value="general">General</option>
            <option value="blog">Blog</option>
            <option value="products">Products</option>
          </select>
        </div>
        
        <div class="flex justify-end space-x-3">
          <a href="/admin/media/" class="btn btn-secondary">Cancel</a>
          <button type="submit" class="btn btn-primary">Upload</button>
        </div>
      </div>
    </form>
  </div>
  
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const fileUpload = document.getElementById('file-upload');
      const dropZone = fileUpload.closest('div.border-dashed');
      
      // File name display
      fileUpload.addEventListener('change', (e) => {
        const fileName = e.target.files[0]?.name;
        if (fileName) {
          const fileNameDisplay = document.createElement('p');
          fileNameDisplay.className = 'text-sm text-gray-700 mt-2';
          fileNameDisplay.textContent = `Selected: ${fileName}`;
          
          // Remove any existing file name display
          const existingDisplay = dropZone.querySelector('p.text-sm.text-gray-700');
          if (existingDisplay) {
            existingDisplay.remove();
          }
          
          dropZone.appendChild(fileNameDisplay);
        }
      });
      
      // Drag and drop functionality
      ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
        dropZone.addEventListener(eventName, preventDefaults, false);
      });
      
      function preventDefaults(e) {
        e.preventDefault();
        e.stopPropagation();
      }
      
      ['dragenter', 'dragover'].forEach(eventName => {
        dropZone.addEventListener(eventName, highlight, false);
      });
      
      ['dragleave', 'drop'].forEach(eventName => {
        dropZone.addEventListener(eventName, unhighlight, false);
      });
      
      function highlight() {
        dropZone.classList.add('border-blue-500', 'bg-blue-50');
      }
      
      function unhighlight() {
        dropZone.classList.remove('border-blue-500', 'bg-blue-50');
      }
      
      dropZone.addEventListener('drop', handleDrop, false);
      
      function handleDrop(e) {
        const dt = e.dataTransfer;
        const files = dt.files;
        
        if (files.length > 0) {
          fileUpload.files = files;
          
          // Trigger change event
          const event = new Event('change', { bubbles: true });
          fileUpload.dispatchEvent(event);
        }
      }
    });
  </script>
</AdminLayout>